sample.cpp:2:1 sample.cpp:2:2 hash #
sample.cpp:2:2 sample.cpp:2:9 raw_identifier include
sample.cpp:2:10 sample.cpp:2:11 less <
sample.cpp:2:11 sample.cpp:2:16 raw_identifier stdio
sample.cpp:2:16 sample.cpp:2:17 period .
sample.cpp:2:17 sample.cpp:2:18 raw_identifier h
sample.cpp:2:18 sample.cpp:2:19 greater >
sample.cpp:3:1 sample.cpp:3:2 hash #
sample.cpp:3:2 sample.cpp:3:8 raw_identifier define
sample.cpp:3:9 sample.cpp:3:11 raw_identifier ss
sample.cpp:3:12 sample.cpp:3:18 raw_identifier struct
sample.cpp:3:19 sample.cpp:3:22 raw_identifier stc
sample.cpp:5:1 sample.cpp:5:7 raw_identifier struct
sample.cpp:5:8 sample.cpp:5:11 raw_identifier stc
sample.cpp:5:11 sample.cpp:5:12 l_brace {
sample.cpp:6:5 sample.cpp:6:8 raw_identifier int
sample.cpp:6:9 sample.cpp:6:23 raw_identifier struct_field_1
sample.cpp:6:23 sample.cpp:6:24 semi ;
sample.cpp:7:5 sample.cpp:7:9 raw_identifier char
sample.cpp:7:10 sample.cpp:7:24 raw_identifier struct_field_2
sample.cpp:7:24 sample.cpp:7:25 semi ;
sample.cpp:8:5 sample.cpp:8:9 raw_identifier void
sample.cpp:8:10 sample.cpp:8:18 raw_identifier inc_func
sample.cpp:8:18 sample.cpp:8:19 l_paren (
sample.cpp:8:19 sample.cpp:8:20 r_paren )
sample.cpp:8:21 sample.cpp:8:22 l_brace {
sample.cpp:9:6 sample.cpp:9:20 raw_identifier struct_field_1
sample.cpp:9:20 sample.cpp:9:22 plusplus ++
sample.cpp:9:22 sample.cpp:9:23 semi ;
sample.cpp:10:5 sample.cpp:10:6 r_brace }
sample.cpp:11:1 sample.cpp:11:2 r_brace }
sample.cpp:11:2 sample.cpp:11:3 semi ;
sample.cpp:13:1 sample.cpp:13:5 raw_identifier enum
sample.cpp:13:6 sample.cpp:13:9 raw_identifier enm
sample.cpp:13:10 sample.cpp:13:11 l_brace {
sample.cpp:13:11 sample.cpp:13:13 raw_identifier e1
sample.cpp:13:13 sample.cpp:13:14 comma ,
sample.cpp:13:15 sample.cpp:13:17 raw_identifier e2
sample.cpp:13:17 sample.cpp:13:18 comma ,
sample.cpp:13:19 sample.cpp:13:21 raw_identifier e3
sample.cpp:13:21 sample.cpp:13:22 r_brace }
sample.cpp:13:22 sample.cpp:13:23 semi ;
sample.cpp:15:1 sample.cpp:15:6 raw_identifier class
sample.cpp:15:7 sample.cpp:15:10 raw_identifier cls
sample.cpp:16:1 sample.cpp:16:2 l_brace {
sample.cpp:17:1 sample.cpp:17:7 raw_identifier public
sample.cpp:17:7 sample.cpp:17:8 colon :
sample.cpp:18:5 sample.cpp:18:8 raw_identifier int
sample.cpp:18:9 sample.cpp:18:22 raw_identifier class_field_1
sample.cpp:18:22 sample.cpp:18:23 semi ;
sample.cpp:19:5 sample.cpp:19:10 raw_identifier float
sample.cpp:19:11 sample.cpp:19:24 raw_identifier class_field_2
sample.cpp:19:24 sample.cpp:19:25 equal =
sample.cpp:19:25 sample.cpp:19:28 numeric_constant 1.5
sample.cpp:19:28 sample.cpp:19:29 semi ;
sample.cpp:20:5 sample.cpp:20:8 raw_identifier cls
sample.cpp:20:8 sample.cpp:20:9 l_paren (
sample.cpp:20:9 sample.cpp:20:10 r_paren )
sample.cpp:20:11 sample.cpp:20:12 l_brace {
sample.cpp:21:9 sample.cpp:21:22 raw_identifier class_field_1
sample.cpp:21:22 sample.cpp:21:23 equal =
sample.cpp:21:23 sample.cpp:21:24 numeric_constant 0
sample.cpp:21:24 sample.cpp:21:25 semi ;
sample.cpp:22:5 sample.cpp:22:6 r_brace }
sample.cpp:23:5 sample.cpp:23:8 raw_identifier cls
sample.cpp:23:8 sample.cpp:23:9 l_paren (
sample.cpp:23:9 sample.cpp:23:12 raw_identifier int
sample.cpp:23:13 sample.cpp:23:14 raw_identifier c
sample.cpp:23:14 sample.cpp:23:15 r_paren )
sample.cpp:23:16 sample.cpp:23:17 l_brace {
sample.cpp:24:9 sample.cpp:24:22 raw_identifier class_field_1
sample.cpp:24:22 sample.cpp:24:23 equal =
sample.cpp:24:23 sample.cpp:24:24 raw_identifier c
sample.cpp:24:24 sample.cpp:24:25 semi ;
sample.cpp:25:5 sample.cpp:25:6 r_brace }
sample.cpp:26:5 sample.cpp:26:9 raw_identifier void
sample.cpp:26:10 sample.cpp:26:14 raw_identifier func
sample.cpp:26:14 sample.cpp:26:15 l_paren (
sample.cpp:26:15 sample.cpp:26:18 raw_identifier int
sample.cpp:26:19 sample.cpp:26:20 raw_identifier c
sample.cpp:26:20 sample.cpp:26:21 r_paren )
sample.cpp:26:22 sample.cpp:26:23 l_brace {
sample.cpp:27:9 sample.cpp:27:22 raw_identifier class_field_1
sample.cpp:27:22 sample.cpp:27:23 equal =
sample.cpp:27:23 sample.cpp:27:24 raw_identifier c
sample.cpp:27:24 sample.cpp:27:25 semi ;
sample.cpp:28:5 sample.cpp:28:6 r_brace }
sample.cpp:29:5 sample.cpp:29:6 tilde ~
sample.cpp:29:6 sample.cpp:29:9 raw_identifier cls
sample.cpp:29:9 sample.cpp:29:10 l_paren (
sample.cpp:29:10 sample.cpp:29:11 r_paren )
sample.cpp:29:12 sample.cpp:29:13 l_brace {
sample.cpp:30:9 sample.cpp:30:22 raw_identifier class_field_2
sample.cpp:30:22 sample.cpp:30:23 equal =
sample.cpp:30:23 sample.cpp:30:24 numeric_constant 0
sample.cpp:30:24 sample.cpp:30:25 semi ;
sample.cpp:31:5 sample.cpp:31:6 r_brace }
sample.cpp:32:1 sample.cpp:32:2 r_brace }
sample.cpp:32:2 sample.cpp:32:3 semi ;
sample.cpp:34:1 sample.cpp:34:7 raw_identifier struct
sample.cpp:34:8 sample.cpp:34:9 l_brace {
sample.cpp:35:2 sample.cpp:35:7 raw_identifier const
sample.cpp:35:8 sample.cpp:35:14 raw_identifier double
sample.cpp:35:15 sample.cpp:35:32 raw_identifier anon_struct_field
sample.cpp:35:33 sample.cpp:35:34 equal =
sample.cpp:35:35 sample.cpp:35:38 numeric_constant 1.2
sample.cpp:35:38 sample.cpp:35:39 semi ;
sample.cpp:36:1 sample.cpp:36:2 r_brace }
sample.cpp:36:3 sample.cpp:36:7 raw_identifier anon
sample.cpp:36:7 sample.cpp:36:8 semi ;
sample.cpp:38:1 sample.cpp:38:8 raw_identifier typedef
sample.cpp:38:9 sample.cpp:38:12 raw_identifier cls
sample.cpp:38:13 sample.cpp:38:15 raw_identifier cs
sample.cpp:38:15 sample.cpp:38:16 semi ;
sample.cpp:40:1 sample.cpp:40:5 raw_identifier void
sample.cpp:40:6 sample.cpp:40:11 raw_identifier print
sample.cpp:40:11 sample.cpp:40:12 l_paren (
sample.cpp:40:12 sample.cpp:40:14 raw_identifier ss
sample.cpp:40:15 sample.cpp:40:19 raw_identifier stc_
sample.cpp:40:19 sample.cpp:40:20 r_paren )
sample.cpp:40:21 sample.cpp:40:22 l_brace {
sample.cpp:41:5 sample.cpp:41:11 raw_identifier printf
sample.cpp:41:11 sample.cpp:41:12 l_paren (
sample.cpp:41:12 sample.cpp:41:21 string_literal "%d %c\n"
sample.cpp:41:21 sample.cpp:41:22 comma ,
sample.cpp:41:23 sample.cpp:41:27 raw_identifier stc_
sample.cpp:41:27 sample.cpp:41:28 period .
sample.cpp:41:28 sample.cpp:41:42 raw_identifier struct_field_1
sample.cpp:41:42 sample.cpp:41:43 comma ,
sample.cpp:41:44 sample.cpp:41:48 raw_identifier stc_
sample.cpp:41:48 sample.cpp:41:49 period .
sample.cpp:41:49 sample.cpp:41:63 raw_identifier struct_field_2
sample.cpp:41:63 sample.cpp:41:64 r_paren )
sample.cpp:41:64 sample.cpp:41:65 semi ;
sample.cpp:42:1 sample.cpp:42:2 r_brace }
sample.cpp:44:1 sample.cpp:44:5 raw_identifier void
sample.cpp:44:6 sample.cpp:44:11 raw_identifier print
sample.cpp:44:11 sample.cpp:44:12 l_paren (
sample.cpp:44:12 sample.cpp:44:15 raw_identifier cls
sample.cpp:44:16 sample.cpp:44:18 raw_identifier cl
sample.cpp:44:18 sample.cpp:44:19 comma ,
sample.cpp:44:20 sample.cpp:44:23 raw_identifier enm
sample.cpp:44:24 sample.cpp:44:26 raw_identifier en
sample.cpp:44:26 sample.cpp:44:27 r_paren )
sample.cpp:44:28 sample.cpp:44:29 l_brace {
sample.cpp:45:5 sample.cpp:45:11 raw_identifier printf
sample.cpp:45:11 sample.cpp:45:12 l_paren (
sample.cpp:45:12 sample.cpp:45:21 string_literal "%d %d\n"
sample.cpp:45:21 sample.cpp:45:22 comma ,
sample.cpp:45:23 sample.cpp:45:25 raw_identifier cl
sample.cpp:45:25 sample.cpp:45:26 period .
sample.cpp:45:26 sample.cpp:45:39 raw_identifier class_field_1
sample.cpp:45:39 sample.cpp:45:40 comma ,
sample.cpp:45:41 sample.cpp:45:43 raw_identifier en
sample.cpp:45:43 sample.cpp:45:44 r_paren )
sample.cpp:45:44 sample.cpp:45:45 semi ;
sample.cpp:46:1 sample.cpp:46:2 r_brace }
sample.cpp:48:1 sample.cpp:48:4 raw_identifier int
sample.cpp:48:5 sample.cpp:48:9 raw_identifier main
sample.cpp:48:9 sample.cpp:48:10 l_paren (
sample.cpp:48:10 sample.cpp:48:13 raw_identifier int
sample.cpp:48:14 sample.cpp:48:18 raw_identifier argc
sample.cpp:48:18 sample.cpp:48:19 comma ,
sample.cpp:48:20 sample.cpp:48:24 raw_identifier char
sample.cpp:48:25 sample.cpp:48:30 raw_identifier const
sample.cpp:48:31 sample.cpp:48:32 star *
sample.cpp:48:32 sample.cpp:48:36 raw_identifier argv
sample.cpp:48:36 sample.cpp:48:37 l_square [
sample.cpp:48:37 sample.cpp:48:38 r_square ]
sample.cpp:48:38 sample.cpp:48:39 r_paren )
sample.cpp:49:1 sample.cpp:49:2 l_brace {
sample.cpp:50:5 sample.cpp:50:8 raw_identifier int
sample.cpp:50:9 sample.cpp:50:13 raw_identifier var1
sample.cpp:50:14 sample.cpp:50:15 equal =
sample.cpp:50:16 sample.cpp:50:17 numeric_constant 1
sample.cpp:50:17 sample.cpp:50:18 semi ;
sample.cpp:51:5 sample.cpp:51:7 raw_identifier cs
sample.cpp:51:8 sample.cpp:51:17 raw_identifier class_var
sample.cpp:51:17 sample.cpp:51:18 semi ;
sample.cpp:52:5 sample.cpp:52:7 raw_identifier ss
sample.cpp:52:8 sample.cpp:52:18 raw_identifier struct_var
sample.cpp:52:18 sample.cpp:52:19 semi ;
sample.cpp:53:5 sample.cpp:53:15 raw_identifier struct_var
sample.cpp:53:15 sample.cpp:53:16 period .
sample.cpp:53:16 sample.cpp:53:30 raw_identifier struct_field_1
sample.cpp:53:31 sample.cpp:53:32 equal =
sample.cpp:53:33 sample.cpp:53:34 numeric_constant 2
sample.cpp:53:34 sample.cpp:53:35 semi ;
sample.cpp:54:5 sample.cpp:54:15 raw_identifier struct_var
sample.cpp:54:15 sample.cpp:54:16 period .
sample.cpp:54:16 sample.cpp:54:30 raw_identifier struct_field_2
sample.cpp:54:31 sample.cpp:54:32 equal =
sample.cpp:54:33 sample.cpp:54:36 char_constant 's'
sample.cpp:54:36 sample.cpp:54:37 semi ;
sample.cpp:55:5 sample.cpp:55:9 raw_identifier enum
sample.cpp:55:10 sample.cpp:55:13 raw_identifier enm
sample.cpp:55:14 sample.cpp:55:22 raw_identifier enum_var
sample.cpp:55:23 sample.cpp:55:24 equal =
sample.cpp:55:25 sample.cpp:55:27 raw_identifier e3
sample.cpp:55:27 sample.cpp:55:28 semi ;
sample.cpp:56:5 sample.cpp:56:14 raw_identifier class_var
sample.cpp:56:14 sample.cpp:56:15 period .
sample.cpp:56:15 sample.cpp:56:19 raw_identifier func
sample.cpp:56:19 sample.cpp:56:20 l_paren (
sample.cpp:56:20 sample.cpp:56:24 raw_identifier var1
sample.cpp:56:24 sample.cpp:56:25 r_paren )
sample.cpp:56:25 sample.cpp:56:26 semi ;
sample.cpp:57:5 sample.cpp:57:10 raw_identifier print
sample.cpp:57:10 sample.cpp:57:11 l_paren (
sample.cpp:57:11 sample.cpp:57:21 raw_identifier struct_var
sample.cpp:57:21 sample.cpp:57:22 r_paren )
sample.cpp:57:22 sample.cpp:57:23 semi ;
sample.cpp:58:5 sample.cpp:58:10 raw_identifier print
sample.cpp:58:10 sample.cpp:58:11 l_paren (
sample.cpp:58:11 sample.cpp:58:20 raw_identifier class_var
sample.cpp:58:20 sample.cpp:58:21 comma ,
sample.cpp:58:22 sample.cpp:58:30 raw_identifier enum_var
sample.cpp:58:30 sample.cpp:58:31 r_paren )
sample.cpp:58:31 sample.cpp:58:32 semi ;
sample.cpp:59:5 sample.cpp:59:11 raw_identifier printf
sample.cpp:59:11 sample.cpp:59:12 l_paren (
sample.cpp:59:12 sample.cpp:59:19 string_literal "%lf\n"
sample.cpp:59:19 sample.cpp:59:20 comma ,
sample.cpp:59:21 sample.cpp:59:25 raw_identifier anon
sample.cpp:59:25 sample.cpp:59:26 period .
sample.cpp:59:26 sample.cpp:59:43 raw_identifier anon_struct_field
sample.cpp:59:43 sample.cpp:59:44 r_paren )
sample.cpp:59:44 sample.cpp:59:45 semi ;
sample.cpp:60:5 sample.cpp:60:11 raw_identifier return
sample.cpp:60:12 sample.cpp:60:13 numeric_constant 0
sample.cpp:60:13 sample.cpp:60:14 semi ;
sample.cpp:61:1 sample.cpp:61:2 r_brace }
eof